１、CPU使用率の監視開始から、２日待つ
２、<試験対象サーバ>にログイン後、CPU負荷をかける（方法は「リソース負荷のかけ方」参照）
３、負荷をかけた状態で３分待つ
４、Zabbix Webインタフェース画面から監視データ→グラフ→<試験対象サーバ>のCPU utilizationを選択
５、グラフ表示期間のスライドバーを１番左にドラッグ
１、CPU使用率の監視開始から、２日待つ
２、<試験対象サーバ>にログイン後、下記コマンドでCPU負荷をかける
$ yes > /dev/null
３、１分待ってから、Ctrl+cで上記コマンドを強制終了
４、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>のCPU user timeのグラフ→画面右上のグラフを値に変更
５、表示期間を古い方に移動する12hを数回、クリック
１、メモリ空き容量の監視開始から、２日待つ
２、<試験対象サーバ>にログイン後、メモリ負荷をかける（方法は「リソース負荷のかけ方」参照）
３、負荷をかけた状態で３分待つ
４、Zabbix Webインタフェース画面から監視データ→グラフ→<試験対象サーバ>のMemory Usageを選択
５、グラフ表示期間のスライドバーを１番左にドラッグ
１、メモリ空き容量の監視開始から、２日待つ
２、<試験対象サーバ>にログイン後、下記コマンドでメモリ負荷をかける
$ /dev/null < $(yes)
途中、-bash: xrealloc: cannot allocate と表示されて処理が終了した
場合は上記コマンドを再度、実行する
３、１分待ってから、Ctrl+cで上記コマンドを強制終了
４、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>のAvailable memoryのグラフ→画面右上のグラフを値に変更
５、表示期間を古い方に移動する12hを数回、クリック
１、ディスクパーティション使用率の監視開始から、２日待つ
２、<試験対象サーバ>にログイン後、10GBのファイルを生成
$ dd if=/dev/zero of=dummy bs=1G count=10
３、１分待つ
４、Zabbix Webインタフェース画面から監視データ→グラフ→<試験対象サーバ>のUsed disk space on / (percentage)を選択
５、グラフ表示期間のスライドバーを１番左にドラッグ
１、ディスクパーティション使用率の監視開始から、２日待つ
２、<試験対象サーバ>にログイン後、10GBのファイルを生成
$ dd if=/dev/zero of=dummy bs=1G count=10
３、１分待つ
４、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>のUsed disk space on / (percentage)のグラフ→画面右上のグラフを値に変更
５、表示期間を古い方に移動する12hを数回、クリック
１、<試験対象サーバ>にログイン後、ファイルを生成し、ディスクパーティション使用率を70%にする（下記コマンドで作成するファイルサイズはサーバスペックに応じて調整）
$ dd if=/dev/zero of=dummy bs=1G count=<任意の値>
countに指定した値 x 1GBのファイルが生成される
ディスク使用率は $ df コマンドで確認できる
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→障害をクリック
１、<試験対象サーバ>にログイン後、ファイルを生成し、ディスクパーティション使用率を71%にする（下記コマンドで作成するファイルサイズはサーバスペックに応じて調整）
$ dd if=/dev/zero of=dummy bs=1G count=<任意の値>
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→障害をクリック
４、テストPCのメーラーで受信操作を行う
１、<試験対象サーバ>にログイン後、ファイルを生成し、ディスクパーティション使用率を71%にする（下記コマンドで作成するファイルサイズはサーバスペックに応じて調整）
$ dd if=/dev/zero of=dummy bs=1G count=<任意の値>
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→障害をクリックし、ディスク使用率70%超えの障害が表示されることを確認
４、１で生成したファイルを削除
５、１分待つ
６、Zabbix Webインタフェース画面から監視データ→障害をクリック
７、テストPCのメーラーで受信操作を行う
１、<試験対象サーバ>にログイン後、<監視対象ログファイル>に「TEST」と書き込む
$ sudo sh -c 'echo TEST >> /tmp/data_import.log'
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>の<監視対象ログファイル>のヒストリをクリック
１、<試験対象サーバ>にログイン後、<監視対象ログファイル>に「ERROR occurred」と書き込む
$ sudo sh -c 'echo ERROR occurred >> /tmp/data_import.log'
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>の<監視対象ログファイル>のヒストリをクリック
１、<試験対象サーバ>にログイン後、<監視対象ログファイル>に「FATAL occurred」と書き込む
$ sudo sh -c 'echo FATAL occurred >> /tmp/data_import.log'
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>の<監視対象ログファイル>のヒストリをクリック
１、<試験対象サーバ>にログイン後、<監視対象ログファイル>に「ERROR1」と書き込む
$ sudo sh -c 'echo ERROR1 >> /tmp/data_import.log'
２、24時間以上待つ
３、監視対象ログファイルに「ERROR2」と書き込む
$ sudo sh -c 'echo ERROR2 >> /tmp/data_import.log'
４、数分待つ
５、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>の<監視対象ログファイル>のヒストリをクリック
１、<試験対象サーバ>にログイン後、<監視対象ログファイル>に「ERROR3」を書き込む
$ sudo sh -c 'echo ERROR3 >> /tmp/data_import.log'
２、１分待つ
３、Zabbix Webインタフェース画面から監視データ→障害をクリック
４、１分待って、ブラウザ画面を更新
５、テストPCのメーラーで受信操作を行う
１、<試験対象サーバ>にログイン後、<監視対象ログファイル>に「ERROR41」を書き込む
$ sudo sh -c 'echo ERROR41 >> /tmp/data_import.log'
２、連続して、監視対象ログファイルに「ERROR42」を書き込む
$ sudo sh -c 'echo ERROR42 >> /tmp/data_import.log'
３、１分待つ
４、Zabbix Webインタフェース画面から監視データ→最新データ→<試験対象サーバ>の<監視対象ログファイル>のヒストリをクリック
５、テストPCのメーラーで受信操作を行う
